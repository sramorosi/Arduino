// Command Values for picking 5 stack PowerPlay cones and placing on Mid height Junction
#define MMPS 700 // mm per second
#define X_PP 254 // y location for pick and place in mm
#define Y_MV 700 // x cone pick location in mm
#define Y_MV_NEG -400 // x cone place location in mm
#define FLOORH -60 // z of floor for picking cone from floor
#define MIDJUNTH 600 // z height of Mid Juction for placing
#define CONEH 32 // DELTA cone height STACKED mm
#define HORIZONTAL 0 // global C angle, all moves
#define ALPHADPICK 0 // global D for pick
#define ALPHADPLACE 0 // global D for place
#define CLAWCLOSE -50
#define CLAWOPEN 30
#define LINEDANG 0
#define LINEZ -50

/*sequence coneCmds ={7,{
   {K_CLAW,100,CLAWOPEN,0,0},  // open the claw
   {K_LINE_C,MMPS, X_PP,Y_MV,FLOORH+CONEH*7}, // ready over cone 1
   {K_LINE_C,MMPS, X_PP,Y_MV,FLOORH+CONEH*5}, // down to cone 1
   {K_CLAW,500,CLAWCLOSE,0,0}, // pick cone 1
   {K_LINE_C,MMPS, X_PP,Y_MV,FLOORH+CONEH*9}, // up with cone 1 
   {K_LINE_C,MMPS, X_PP,Y_MV_NEG,MIDJUNTH}, // Move over Junction
   {K_CLAW,500,CLAWOPEN,0,0}  // drop cone 1
}};  */


static int lineCmds[][SIZE_CMD_ARRAY]=
  {{C_CLAW,200,CLAWOPEN,0,0,0,0},
   {C_LINE,2000, 160,-S_CG_Z,LINEZ,  -90,LINEDANG}, // ready
   {C_CLAW,1000,CLAWOPEN,0,0,0,0}, // pause to pick 
   {C_CLAW,1000,CLAWCLOSE,0,0,0,0}, // close to pick camera
   {C_LINE,100, 160,-S_CG_Z,LINEZ+50,   -90,LINEDANG}, // line over
   {C_LINE,100, 700,-S_CG_Z,LINEZ+50,   -90,LINEDANG}, // line over
   {C_TIME,1000,0,0,0,0,0},    // pause
   {C_LINE,100, 160,-S_CG_Z,LINEZ+50,   -90,LINEDANG}}; // line back
                           
static int cmd_array[][SIZE_CMD_ARRAY]=
  {{C_CLAW,1000,CLAWOPEN,0,0,0,0},  // open the claw, wherever it is, 1 second
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*7,  HORIZONTAL,ALPHADPICK}, // ready over cone 1
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*5,  HORIZONTAL,ALPHADPICK}, // down to cone 1
   {C_CLAW,500,CLAWCLOSE,0,0,0,0}, // pick cone 1
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*9,   HORIZONTAL,ALPHADPLACE}, // up with cone 1 
   {C_LINE,MMPS, X_PP,Y_MV_NEG,MIDJUNTH,     HORIZONTAL,ALPHADPLACE}, // Move over Junction
   {C_CLAW,500,CLAWOPEN,0,0,0,0}, // drop cone 1
   
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*6,      HORIZONTAL,ALPHADPICK}, // ready over cone 2
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*4,      HORIZONTAL,ALPHADPICK}, // down to cone 2
   {C_CLAW,500,CLAWCLOSE,0,0,0,0}, // pick cone 2
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*8,    HORIZONTAL,ALPHADPLACE}, // up with cone 2 
   {C_LINE,MMPS, X_PP,Y_MV_NEG,MIDJUNTH,      HORIZONTAL,ALPHADPLACE}, // Move over Junction
   {C_CLAW,500,CLAWOPEN,0,0,0,0}, // drop cone 2
   
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*5,       HORIZONTAL,ALPHADPICK},  // ready over cone 3
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*3,       HORIZONTAL,ALPHADPICK}, // down to cone 3
   {C_CLAW,500,CLAWCLOSE,0,0,0,0}, // pick  cone 3
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*7,    HORIZONTAL,ALPHADPLACE}, // up with cone 3 
   {C_LINE,MMPS, X_PP,Y_MV_NEG,MIDJUNTH,      HORIZONTAL,ALPHADPLACE}, // Move over Junction
   {C_CLAW,500,CLAWOPEN,0,0,0,0}, // drop cone 3
    
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*4,       HORIZONTAL,ALPHADPICK},  // ready over cone 4
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*2,       HORIZONTAL,ALPHADPICK},  // down to cone 4
   {C_CLAW,500,CLAWCLOSE,0,0,0,0}, // pick  cone 4
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*6,     HORIZONTAL,ALPHADPLACE}, // up with cone 4 
   {C_LINE,MMPS, X_PP,Y_MV_NEG,MIDJUNTH,       HORIZONTAL,ALPHADPLACE}, // Move over Junction
   {C_CLAW,500,CLAWOPEN,0,0,0,0}, // drop cone 4
    
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*3,       HORIZONTAL,ALPHADPICK},  // ready over cone 5
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*1,       HORIZONTAL,ALPHADPICK},  // down to cone 5
   {C_CLAW,500,CLAWCLOSE,0,0,0,0}, // pick  cone 5
   {C_LINE,MMPS, X_PP,Y_MV,FLOORH+CONEH*5,    HORIZONTAL,ALPHADPLACE}, // up with cone 5 
   {C_LINE,MMPS, X_PP,Y_MV_NEG,MIDJUNTH,      HORIZONTAL,ALPHADPLACE}, // Move over Junction
   {C_CLAW,500,CLAWOPEN,0,0,0,0}, // drop cone 5
   
   {C_LINE,MMPS/2, 300,0,FLOORH+6*CONEH,       HORIZONTAL,ALPHADPICK}};  // home position